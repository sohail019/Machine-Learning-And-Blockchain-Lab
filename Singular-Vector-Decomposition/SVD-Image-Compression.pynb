import numpy as np
import matplotlib.pyplot as plt
from skimage import io, color

# Load an image (replace 'image.png' with your image path)
image = io.imread('sohail.png')

# Check if the image has an alpha channel (fourth channel)
if image.shape[-1] == 4:
    # Remove the alpha channel
    image = image[:, :, :3]

# Convert the image to grayscale
image_gray = color.rgb2gray(image)

# Perform SVD on the grayscale image
U, S, VT = np.linalg.svd(image_gray)

# Choose a smaller number of singular values to keep (e.g., k = 20)
k = 20

# Reconstruct the image using the first k singular values/components
compressed_image = np.dot(U[:, :k], np.dot(np.diag(S[:k]), VT[:k, :]))

# Display the original and compressed images
plt.figure(figsize=(8, 4))
plt.subplot(1, 2, 1)
plt.imshow(image_gray, cmap='gray')
plt.title('Original Grayscale Image')
plt.axis('off')

plt.subplot(1, 2, 2)
plt.imshow(compressed_image, cmap='gray')
plt.title(f'Compressed Image (k={k})')
plt.axis('off')

plt.tight_layout()
plt.show()

